// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/hosppy/oxcoding/ent/account"
	"github.com/hosppy/oxcoding/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accountFields := schema.Account{}.Fields()
	_ = accountFields
	// accountDescName is the schema descriptor for name field.
	accountDescName := accountFields[2].Descriptor()
	// account.DefaultName holds the default value on creation for the name field.
	account.DefaultName = accountDescName.Default.(string)
	// accountDescActive is the schema descriptor for active field.
	accountDescActive := accountFields[4].Descriptor()
	// account.DefaultActive holds the default value on creation for the active field.
	account.DefaultActive = accountDescActive.Default.(bool)
	// accountDescCreatedAt is the schema descriptor for created_at field.
	accountDescCreatedAt := accountFields[5].Descriptor()
	// account.DefaultCreatedAt holds the default value on creation for the created_at field.
	account.DefaultCreatedAt = accountDescCreatedAt.Default.(time.Time)
	// accountDescPasswordHash is the schema descriptor for password_hash field.
	accountDescPasswordHash := accountFields[6].Descriptor()
	// account.DefaultPasswordHash holds the default value on creation for the password_hash field.
	account.DefaultPasswordHash = accountDescPasswordHash.Default.(string)
	// accountDescAvatarURL is the schema descriptor for avatar_url field.
	accountDescAvatarURL := accountFields[7].Descriptor()
	// account.DefaultAvatarURL holds the default value on creation for the avatar_url field.
	account.DefaultAvatarURL = accountDescAvatarURL.Default.(string)
	// accountDescID is the schema descriptor for id field.
	accountDescID := accountFields[0].Descriptor()
	// account.IDValidator is a validator for the "id" field. It is called by the builders before save.
	account.IDValidator = accountDescID.Validators[0].(func(int) error)
}
